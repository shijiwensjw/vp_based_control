<?xml version="1.0"?>
<launch>
  	<arg name="front_camera_name" default="camera0" />
	<arg name="side_camera_name" default="camera1" />
  	<!-- video_stream_provider can be a number as a video device or a url of a video stream -->
  	<arg name="front_video_stream_provider" default="0" />
  	<arg name="side_video_stream_provider" default="1" />
  	<!-- set camera fps to -->
  	<arg name="set_camera_fps" default="30" />
  	<!-- set buffer queue size of frame capturing to -->
  	<arg name="buffer_queue_size" default="100" />
  	<!-- frames per second to query the camera for -->
  	<arg name="fps" default="60" />
  	<!-- frame_id for the camera -->
  	<arg name="front_frame_id" default="$(arg front_camera_name)" />
  	<arg name="side_frame_id" default="$(arg side_camera_name)" />
  	<!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml
  	To use your own fill this arg with the corresponding url, e.g.:
  	"file:///$(find your_camera_package)/config/your_camera.yaml" -->
    <arg name="camera_info_url" default="" />
  	<!-- flip the image horizontally (mirror it) -->
  	<arg name="flip_horizontal" default="false" />
  	<!-- flip the image vertically -->
  	<arg name="flip_vertical" default="false" />
    <!-- force width and height, 0 means no forcing -->
    <arg name="width" default="0"/>
    <arg name="height" default="0"/>
  	<!-- if show a image_view window subscribed to the generated stream -->
	<arg name="visualize" default="false"/>
    <arg name="calib_path" default="/home/sudeep/Desktop/camchain.yaml"/>
    <arg name="scale" default="1.0" />

   	<!-- images will be published at /camera_name/image with the image transports plugins (e.g.: compressed) installed -->
   	<group ns="$(arg front_camera_name)">
	    <node pkg="video_stream_opencv" type="video_stream" name="$(arg front_camera_name)_stream" output="screen">
	    	<remap from="camera" to="image_raw" />
	    	<param name="front_camera_name" type="string" value="$(arg front_camera_name)" />
	        <param name="video_stream_provider" type="string" value="$(arg front_video_stream_provider)" />
	        <param name="set_camera_fps" type="double" value="$(arg set_camera_fps)" />
	        <param name="buffer_queue_size" type="int" value="$(arg buffer_queue_size)" />
	        <param name="fps" type="double" value="$(arg fps)" />
	        <param name="frame_id" type="string" value="$(arg front_frame_id)" />
	        <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
	        <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
	        <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
	        <param name="width" type="int" value="$(arg width)" />
	        <param name="height" type="int" value="$(arg height)" />
	    </node>

	    <node ns="undistort" name="$(arg front_camera_name)_undistort_node" pkg="image_undistort" type="image_undistort_node">
            <param name="input_camera_namespace" value="cam0"/>
            <param name="input_camera_info_from_ros_params" value = "true"/>
            <param name="scale" value="$(arg scale)"/>
            <param name="process_images" value="true"/>
            <param name="rename_radtan_plumb_bob" value="true"/>
            <param name="output_camera_namespace" value="$(arg front_camera_name)_undistort"/>

            <rosparam file="$(arg calib_path)"/>
            <remap from="input/image" to="/$(arg front_camera_name)/image_raw"/>

        </node>
        <node if="$(arg visualize)" name="$(arg front_camera_name)_image_view" pkg="image_view" type="image_view">
	    	<remap from="image" to="undistort/output/image" />
	    </node>
	</group>
	<group ns="$(arg side_camera_name)">
	    <node pkg="video_stream_opencv" type="video_stream" name="$(arg side_camera_name)_stream" output="screen">
	    	<remap from="camera" to="image_raw" />
	    	<param name="side_camera_name" type="string" value="$(arg side_camera_name)" />
	        <param name="video_stream_provider" type="string" value="$(arg side_video_stream_provider)" />
	        <param name="set_camera_fps" type="double" value="$(arg set_camera_fps)" />
	        <param name="buffer_queue_size" type="int" value="$(arg buffer_queue_size)" />
	        <param name="fps" type="double" value="$(arg fps)" />
	        <param name="frame_id" type="string" value="$(arg side_frame_id)" />
	        <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
	        <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
	        <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
	        <param name="width" type="int" value="$(arg width)" />
	        <param name="height" type="int" value="$(arg height)" />
	    </node>

	    <node ns="undistort" name="$(arg side_camera_name)_undistort_node" pkg="image_undistort" type="image_undistort_node">
            <param name="input_camera_namespace" value="cam0"/>
            <param name="input_camera_info_from_ros_params" value = "true"/>
            <param name="scale" value="$(arg scale)"/>
            <param name="process_images" value="true"/>
            <param name="rename_radtan_plumb_bob" value="true"/>
            <param name="output_camera_namespace" value="$(arg side_camera_name)_undistort"/>

            <rosparam file="$(arg calib_path)"/>
            <remap from="input/image" to="/$(arg side_camera_name)/image_raw"/>

        </node>
        <node if="$(arg visualize)" name="$(arg side_camera_name)_image_view" pkg="image_view" type="image_view">
	    	<remap from="image" to="undistort/output/image" />
	    </node>
	</group>

</launch>